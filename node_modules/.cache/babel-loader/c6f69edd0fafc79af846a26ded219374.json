{"ast":null,"code":"var _jsxFileName = \"/home/macmuka/Desktop/react projects/QuizApp/src/components/Quiz.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport questions from \"./questions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Quiz() {\n  _s();\n\n  //   const task = questions[1].qn;\n  const [task, setTask] = useState(\"Hello! Test your knowledge\");\n  let [count, setCount] = useState(0);\n  const [mark, setMark] = useState(0);\n  const [answer, setAnswer] = useState(\"\");\n  const currentQuestion = questions[count];\n  const [rightAns, setRightAns] = useState(\"\"); // Removing the start task button\n\n  const customStyle = {\n    display: count > 0 && \"none\"\n  }; // getting the input text\n\n  function changed(e) {\n    const inputText = e.target.value;\n    setAnswer(inputText);\n    console.log(answer);\n  }\n\n  function nextBtn(e) {\n    e.preventDefault();\n    setAnswer(\"\");\n    setCount(count + 1);\n    setTask(currentQuestion.qn);\n    const num = questions.indexOf(currentQuestion, 0);\n    setMark(num);\n    const prevNum = questions.indexOf(currentQuestion, 0) - 1;\n    const prevQn = questions[prevNum];\n    setRightAns(currentQuestion.ans); // if (answer === currentQuestion.ans) {\n    //   setMark(mark + 5);\n    // } else {\n    //   setMark(mark + 0);\n    // }\n    // count >= 8 && setTask(\"Congrats! you have reached the end\");\n  } // taking away the input block & next button after the questions are done\n\n\n  const endStyle = {\n    display: count > questions.length && \"none\"\n  };\n\n  function startBtn(e) {\n    e.preventDefault();\n    setTask(currentQuestion.qn);\n  } // function submitBtn(e) {\n  //   e.preventDefault();\n  //   console.log(currentQuestion.ans);\n  //   if (currentQuestion === answer) {\n  //     setMark(mark + 5);\n  //     console.log(currentQuestion.ans);\n  //     console.log(answer);\n  //   } else {\n  //     setMark(mark + 0);\n  //   }\n  //   // answer === currentQuestion.ans ? setMark(mark + 5) : null;\n  //   console.log(mark);\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      style: customStyle,\n      onClick: startBtn,\n      children: \"Start Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: changed,\n      placeholder: \"enter answer\",\n      value: answer,\n      style: endStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: nextBtn,\n      style: endStyle,\n      children: \"next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Marks: \", mark]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: rightAns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Quiz, \"hCUSO0X2MNmubKrlvOPQjZvwQvU=\");\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/home/macmuka/Desktop/react projects/QuizApp/src/components/Quiz.jsx"],"names":["React","useState","questions","Quiz","task","setTask","count","setCount","mark","setMark","answer","setAnswer","currentQuestion","rightAns","setRightAns","customStyle","display","changed","e","inputText","target","value","console","log","nextBtn","preventDefault","qn","num","indexOf","prevNum","prevQn","ans","endStyle","length","startBtn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,4BAAD,CAAhC;AACA,MAAI,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMW,eAAe,GAAGV,SAAS,CAACI,KAAD,CAAjC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC,CAPc,CAQd;;AACA,QAAMc,WAAW,GAAG;AAClBC,IAAAA,OAAO,EAAEV,KAAK,GAAG,CAAR,IAAa;AADJ,GAApB,CATc,CAYd;;AACA,WAASW,OAAT,CAAiBC,CAAjB,EAAoB;AAClB,UAAMC,SAAS,GAAGD,CAAC,CAACE,MAAF,CAASC,KAA3B;AACAV,IAAAA,SAAS,CAACQ,SAAD,CAAT;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYb,MAAZ;AACD;;AAED,WAASc,OAAT,CAAiBN,CAAjB,EAAoB;AAClBA,IAAAA,CAAC,CAACO,cAAF;AACAd,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAJ,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACAD,IAAAA,OAAO,CAACO,eAAe,CAACc,EAAjB,CAAP;AACA,UAAMC,GAAG,GAAGzB,SAAS,CAAC0B,OAAV,CAAkBhB,eAAlB,EAAmC,CAAnC,CAAZ;AACAH,IAAAA,OAAO,CAACkB,GAAD,CAAP;AACA,UAAME,OAAO,GAAG3B,SAAS,CAAC0B,OAAV,CAAkBhB,eAAlB,EAAmC,CAAnC,IAAwC,CAAxD;AACA,UAAMkB,MAAM,GAAG5B,SAAS,CAAC2B,OAAD,CAAxB;AACAf,IAAAA,WAAW,CAACF,eAAe,CAACmB,GAAjB,CAAX,CATkB,CAUlB;AACA;AACA;AACA;AACA;AAEA;AACD,GApCa,CAqCd;;;AACA,QAAMC,QAAQ,GAAG;AAAEhB,IAAAA,OAAO,EAAEV,KAAK,GAAGJ,SAAS,CAAC+B,MAAlB,IAA4B;AAAvC,GAAjB;;AAEA,WAASC,QAAT,CAAkBhB,CAAlB,EAAqB;AACnBA,IAAAA,CAAC,CAACO,cAAF;AACApB,IAAAA,OAAO,CAACO,eAAe,CAACc,EAAjB,CAAP;AACD,GA3Ca,CA4Cd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AACA,sBACE;AAAA,4BACE;AAAQ,MAAA,KAAK,EAAEX,WAAf;AAA4B,MAAA,OAAO,EAAEmB,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,gBAAI9B;AAAJ;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,QAAQ,EAAEa,OAFZ;AAGE,MAAA,WAAW,EAAC,cAHd;AAIE,MAAA,KAAK,EAAEP,MAJT;AAKE,MAAA,KAAK,EAAEsB;AALT;AAAA;AAAA;AAAA;AAAA,YANF,eAaE;AAAA;AAAA;AAAA;AAAA,YAbF,eAeE;AAAQ,MAAA,OAAO,EAAER,OAAjB;AAA0B,MAAA,KAAK,EAAEQ,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,eAkBE;AAAA,4BAAWxB,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF,eAmBE;AAAA,gBAAIK;AAAJ;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GAjFQV,I;;KAAAA,I;AAmFT,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport questions from \"./questions\";\n\nfunction Quiz() {\n  //   const task = questions[1].qn;\n  const [task, setTask] = useState(\"Hello! Test your knowledge\");\n  let [count, setCount] = useState(0);\n  const [mark, setMark] = useState(0);\n  const [answer, setAnswer] = useState(\"\");\n  const currentQuestion = questions[count];\n  const [rightAns, setRightAns] = useState(\"\");\n  // Removing the start task button\n  const customStyle = {\n    display: count > 0 && \"none\",\n  };\n  // getting the input text\n  function changed(e) {\n    const inputText = e.target.value;\n    setAnswer(inputText);\n    console.log(answer);\n  }\n\n  function nextBtn(e) {\n    e.preventDefault();\n    setAnswer(\"\");\n    setCount(count + 1);\n    setTask(currentQuestion.qn);\n    const num = questions.indexOf(currentQuestion, 0);\n    setMark(num);\n    const prevNum = questions.indexOf(currentQuestion, 0) - 1;\n    const prevQn = questions[prevNum];\n    setRightAns(currentQuestion.ans);\n    // if (answer === currentQuestion.ans) {\n    //   setMark(mark + 5);\n    // } else {\n    //   setMark(mark + 0);\n    // }\n\n    // count >= 8 && setTask(\"Congrats! you have reached the end\");\n  }\n  // taking away the input block & next button after the questions are done\n  const endStyle = { display: count > questions.length && \"none\" };\n\n  function startBtn(e) {\n    e.preventDefault();\n    setTask(currentQuestion.qn);\n  }\n  // function submitBtn(e) {\n  //   e.preventDefault();\n  //   console.log(currentQuestion.ans);\n  //   if (currentQuestion === answer) {\n  //     setMark(mark + 5);\n  //     console.log(currentQuestion.ans);\n  //     console.log(answer);\n  //   } else {\n  //     setMark(mark + 0);\n  //   }\n\n  //   // answer === currentQuestion.ans ? setMark(mark + 5) : null;\n  //   console.log(mark);\n  // }\n  return (\n    <div>\n      <button style={customStyle} onClick={startBtn}>\n        Start Task\n      </button>\n      <p>{task}</p>\n      <br />\n      <input\n        type=\"text\"\n        onChange={changed}\n        placeholder=\"enter answer\"\n        value={answer}\n        style={endStyle}\n      />\n      <br />\n      {/* <button onClick={submitBtn}>submit</button> */}\n      <button onClick={nextBtn} style={endStyle}>\n        next\n      </button>\n      <p>Marks: {mark}</p>\n      <p>{rightAns}</p>\n    </div>\n  );\n}\n\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}