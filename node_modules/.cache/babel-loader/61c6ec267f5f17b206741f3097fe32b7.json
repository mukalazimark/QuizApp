{"ast":null,"code":"var _jsxFileName = \"/home/macmuka/Desktop/react projects/QuizApp/src/components/Quiz.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport questions from \"./questions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Quiz() {\n  _s();\n\n  //   const task = questions[1].qn;\n  const muka = 5;\n  const [task, setTask] = useState(\"Hello! Test your knowledge\");\n  let [count, setCount] = useState(0);\n  const [mark, setMark] = useState(0);\n  const [answer, setAnswer] = useState(\"\");\n  const currentQuestion = questions[count]; // Removing the start task button\n\n  const customStyle = {\n    display: count > 0 && \"none\"\n  }; // getting the input text\n\n  function changed(e) {\n    const inputText = e.target.value;\n    setAnswer(inputText);\n    console.log(answer);\n  }\n\n  function nextBtn(e) {\n    e.preventDefault();\n    setAnswer(\"\");\n    setCount(count + 1);\n    setTask(currentQuestion.qn); // setMark(mark + 5);\n    // count >= 8 && setTask(\"Congrats! you have reached the end\");\n  }\n\n  const btnStyle = {\n    display: count > questions.length && \"none\"\n  };\n\n  function startBtn(e) {\n    e.preventDefault();\n    setTask(currentQuestion.qn);\n  } // function submitBtn(e) {\n  //   e.preventDefault();\n  //   console.log(currentQuestion.ans);\n  //   if (currentQuestion === answer) {\n  //     setMark(mark + 5);\n  //     console.log(currentQuestion.ans);\n  //     console.log(answer);\n  //   } else {\n  //     setMark(mark + 0);\n  //   }\n  //   // answer === currentQuestion.ans ? setMark(mark + 5) : null;\n  //   console.log(mark);\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      style: customStyle,\n      onClick: startBtn,\n      children: \"Start Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: changed,\n      placeholder: \"enter answer\",\n      value: answer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: nextBtn,\n      style: btnStyle,\n      children: \"next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Marks: \", mark]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Quiz, \"M+tx/Ht/g4b8OluMBPtmdiiwqeY=\");\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/home/macmuka/Desktop/react projects/QuizApp/src/components/Quiz.jsx"],"names":["React","useState","questions","Quiz","muka","task","setTask","count","setCount","mark","setMark","answer","setAnswer","currentQuestion","customStyle","display","changed","e","inputText","target","value","console","log","nextBtn","preventDefault","qn","btnStyle","length","startBtn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd;AACA,QAAMC,IAAI,GAAG,CAAb;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,4BAAD,CAAhC;AACA,MAAI,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMY,eAAe,GAAGX,SAAS,CAACK,KAAD,CAAjC,CAPc,CAQd;;AACA,QAAMO,WAAW,GAAG;AAClBC,IAAAA,OAAO,EAAER,KAAK,GAAG,CAAR,IAAa;AADJ,GAApB,CATc,CAYd;;AACA,WAASS,OAAT,CAAiBC,CAAjB,EAAoB;AAClB,UAAMC,SAAS,GAAGD,CAAC,CAACE,MAAF,CAASC,KAA3B;AACAR,IAAAA,SAAS,CAACM,SAAD,CAAT;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ;AACD;;AAED,WAASY,OAAT,CAAiBN,CAAjB,EAAoB;AAClBA,IAAAA,CAAC,CAACO,cAAF;AACAZ,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAJ,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACAD,IAAAA,OAAO,CAACO,eAAe,CAACY,EAAjB,CAAP,CAJkB,CAKlB;AACA;AACD;;AACD,QAAMC,QAAQ,GAAG;AAAEX,IAAAA,OAAO,EAAER,KAAK,GAAGL,SAAS,CAACyB,MAAlB,IAA4B;AAAvC,GAAjB;;AACA,WAASC,QAAT,CAAkBX,CAAlB,EAAqB;AACnBA,IAAAA,CAAC,CAACO,cAAF;AACAlB,IAAAA,OAAO,CAACO,eAAe,CAACY,EAAjB,CAAP;AACD,GA/Ba,CAgCd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AACA,sBACE;AAAA,4BACE;AAAQ,MAAA,KAAK,EAAEX,WAAf;AAA4B,MAAA,OAAO,EAAEc,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,gBAAIvB;AAAJ;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,QAAQ,EAAEW,OAFZ;AAGE,MAAA,WAAW,EAAC,cAHd;AAIE,MAAA,KAAK,EAAEL;AAJT;AAAA;AAAA;AAAA;AAAA,YANF,eAYE;AAAA;AAAA;AAAA;AAAA,YAZF,eAcE;AAAQ,MAAA,OAAO,EAAEY,OAAjB;AAA0B,MAAA,KAAK,EAAEG,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF,eAiBE;AAAA,4BAAWjB,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAnEQN,I;;KAAAA,I;AAqET,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport questions from \"./questions\";\n\nfunction Quiz() {\n  //   const task = questions[1].qn;\n  const muka = 5;\n  const [task, setTask] = useState(\"Hello! Test your knowledge\");\n  let [count, setCount] = useState(0);\n  const [mark, setMark] = useState(0);\n  const [answer, setAnswer] = useState(\"\");\n  const currentQuestion = questions[count];\n  // Removing the start task button\n  const customStyle = {\n    display: count > 0 && \"none\",\n  };\n  // getting the input text\n  function changed(e) {\n    const inputText = e.target.value;\n    setAnswer(inputText);\n    console.log(answer);\n  }\n\n  function nextBtn(e) {\n    e.preventDefault();\n    setAnswer(\"\");\n    setCount(count + 1);\n    setTask(currentQuestion.qn);\n    // setMark(mark + 5);\n    // count >= 8 && setTask(\"Congrats! you have reached the end\");\n  }\n  const btnStyle = { display: count > questions.length && \"none\" };\n  function startBtn(e) {\n    e.preventDefault();\n    setTask(currentQuestion.qn);\n  }\n  // function submitBtn(e) {\n  //   e.preventDefault();\n  //   console.log(currentQuestion.ans);\n  //   if (currentQuestion === answer) {\n  //     setMark(mark + 5);\n  //     console.log(currentQuestion.ans);\n  //     console.log(answer);\n  //   } else {\n  //     setMark(mark + 0);\n  //   }\n\n  //   // answer === currentQuestion.ans ? setMark(mark + 5) : null;\n  //   console.log(mark);\n  // }\n  return (\n    <div>\n      <button style={customStyle} onClick={startBtn}>\n        Start Task\n      </button>\n      <p>{task}</p>\n      <br />\n      <input\n        type=\"text\"\n        onChange={changed}\n        placeholder=\"enter answer\"\n        value={answer}\n      />\n      <br />\n      {/* <button onClick={submitBtn}>submit</button> */}\n      <button onClick={nextBtn} style={btnStyle}>\n        next\n      </button>\n      <p>Marks: {mark}</p>\n    </div>\n  );\n}\n\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}